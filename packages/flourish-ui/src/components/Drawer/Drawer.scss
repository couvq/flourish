@import '../../index.scss';

$drawer-padding: 2.5rem;
$drawer-width: 25vw;

/* Drawer open animation common properties */
$open-animation-duration: 0.3s;
$open-animation-timing-function: ease;
$open-animation-delay: 0s;

@keyframes drawer-open-left {
  from {
    transform: translateX(-#{$drawer-width});
  }

  to {
    transform: translateX(0);
  }
}

@keyframes drawer-close-left {
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX(-#{$drawer-width});
  }
}

@keyframes drawer-open-right {
  from {
    transform: translateX($drawer-width);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes drawer-close-right {
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX($drawer-width);
  }
}

@keyframes drawer-open-mobile {
  from {
    transform: translateY(100%);
  }

  to {
    transform: translateY(0%);
  }
}

@keyframes drawer-close-mobile {
  from {
    transform: translateY(0%);
  }

  to {
    transform: translateY(100%);
  }
}

.close-mobile {
  animation: $open-animation-duration $open-animation-timing-function
    $open-animation-delay drawer-close-mobile !important;
  animation-fill-mode: forwards !important;
}

.close-left {
  animation: $open-animation-duration $open-animation-timing-function
    $open-animation-delay drawer-close-left !important;
  animation-fill-mode: forwards !important;
}

.close-right {
  animation: $open-animation-duration $open-animation-timing-function
    $open-animation-delay drawer-close-right !important;
  animation-fill-mode: forwards !important;
}

.#{$prefix}drawer {
  position: fixed;
  top: 0;
  background-color: $f-color-bg-light;
  border: none;
  padding: 0;
  width: $drawer-width;
  height: 100%;
  max-height: 100%;

  @media screen and (max-width: 1000px) {
    width: 100%;
    max-width: 100%;

    &[open] {
      animation: $open-animation-duration $open-animation-timing-function
        $open-animation-delay drawer-open-mobile;
    }
  }

  @media (prefers-reduced-motion) {
    animation: none !important;
  }

  &::backdrop {
    background: $f-color-overlay-background;
  }

  .#{$prefix}drawer-top {
    width: 100%;
    height: calc($drawer-padding - 1rem);
    position: sticky;
    top: 0;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    background-color: $f-color-bg-light;
    padding: 10px;
  }

  .#{$prefix}drawer-content {
    padding: 1rem $drawer-padding calc($drawer-padding - 0.5rem) $drawer-padding;
  }
}

.#{$prefix}drawer-left {
  left: 0;

  &[open] {
    animation: $open-animation-duration $open-animation-timing-function
      $open-animation-delay drawer-open-left;
  }
}

.#{$prefix}drawer-right {
  left: auto;
  right: 0;

  &[open] {
    animation: $open-animation-duration $open-animation-timing-function
      $open-animation-delay drawer-open-right;
  }
}

.#{$prefix}dark-mode .#{$prefix}drawer {
  background-color: $f-color-inverse-dark;

  .#{$prefix}drawer-top {
    background-color: $f-color-inverse-dark;
  }
}
